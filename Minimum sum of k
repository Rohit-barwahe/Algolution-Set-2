#include <iostream>
using namespace std;

string findMaxSumSubarray(int arr[], int n, int k) {
    if (k > n) {
        return "Invalid";  
    }
    
    
    int window_sum = 0;
    for (int i = 0; i < k; ++i) {
        window_sum += arr[i];
    }
    
    
    int max_sum = window_sum;
    
    
    for (int i = k; i < n; ++i) {
        
        window_sum += arr[i] - arr[i - k];
        
      
        if (window_sum > max_sum) {
            max_sum = window_sum;
        }
    }
    
    return to_string(max_sum);
}

int main() {
    int arr1[] = {100, 200, 300, 400};
    int k1 = 2;
    int n1 = sizeof(arr1) / sizeof(arr1[0]);
    
    int arr2[] = {1, 4, 2, 10, 23, 3, 1, 0, 20};
    int k2 = 4;
    int n2 = sizeof(arr2) / sizeof(arr2[0]);
    
    int arr3[] = {2, 3};
    int k3 = 3;
    int n3 = sizeof(arr3) / sizeof(arr3[0]);

    cout << "Maximum sum of " << k1 << " consecutive elements: " << findMaxSumSubarray(arr1, n1, k1) << endl;
    cout << "Maximum sum of " << k2 << " consecutive elements: " << findMaxSumSubarray(arr2, n2, k2) << endl;
    cout << "Maximum sum of " << k3 << " consecutive elements: " << findMaxSumSubarray(arr3, n3, k3) << endl;

    return 0;
}
